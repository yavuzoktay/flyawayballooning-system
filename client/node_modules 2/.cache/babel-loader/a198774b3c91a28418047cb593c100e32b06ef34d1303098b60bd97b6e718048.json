{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/yavuzoktay/Documents/FlyAwayBallooning/flyawayballooning-system-backend/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/yavuzoktay/Documents/FlyAwayBallooning/flyawayballooning-system-backend/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"onEntering\"],\n  _excluded2 = [\"autoFocus\", \"children\", \"className\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport MenuList from \"../MenuList/index.js\";\nimport Popover, { PopoverPaper } from \"../Popover/index.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getMenuUtilityClass } from \"./menuClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\nconst MenuRoot = styled(Popover, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nexport const MenuPaper = styled(PopoverPaper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: (props, styles) => styles.list\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  const {\n      autoFocus = true,\n      children,\n      className,\n      disableAutoFocusItem = false,\n      MenuListProps = {},\n      onClose,\n      open,\n      PaperProps = {},\n      PopoverClasses,\n      transitionDuration = 'auto',\n      TransitionProps: {\n        onEntering\n      } = {},\n      variant = 'selectedMenu',\n      slots = {},\n      slotProps = {}\n    } = props,\n    TransitionProps = _objectWithoutProperties(props.TransitionProps, _excluded),\n    other = _objectWithoutProperties(props, _excluded2);\n  const isRtl = useRtl();\n  const ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, {\n        direction: isRtl ? 'rtl' : 'ltr'\n      });\n    }\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n  let activeItemIndex = -1;\n  // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const externalForwardedProps = {\n    slots,\n    slotProps: _objectSpread({\n      list: MenuListProps,\n      transition: TransitionProps,\n      paper: PaperProps\n    }, slotProps)\n  };\n  const rootSlotProps = useSlotProps({\n    elementType: slots.root,\n    externalSlotProps: slotProps.root,\n    ownerState,\n    className: [classes.root, className]\n  });\n  const [PaperSlot, paperSlotProps] = useSlot('paper', {\n    className: classes.paper,\n    elementType: MenuPaper,\n    externalForwardedProps,\n    shouldForwardComponentProp: true,\n    ownerState\n  });\n  const [ListSlot, listSlotProps] = useSlot('list', {\n    className: clsx(classes.list, MenuListProps.className),\n    elementType: MenuMenuList,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    getSlotProps: handlers => _objectSpread(_objectSpread({}, handlers), {}, {\n      onKeyDown: event => {\n        var _handlers$onKeyDown;\n        handleListKeyDown(event);\n        (_handlers$onKeyDown = handlers.onKeyDown) === null || _handlers$onKeyDown === void 0 || _handlers$onKeyDown.call(handlers, event);\n      }\n    }),\n    ownerState\n  });\n  const resolvedTransitionProps = typeof externalForwardedProps.slotProps.transition === 'function' ? externalForwardedProps.slotProps.transition(ownerState) : externalForwardedProps.slotProps.transition;\n  return /*#__PURE__*/_jsx(MenuRoot, _objectSpread(_objectSpread({\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    slots: _objectSpread({\n      root: slots.root,\n      paper: PaperSlot,\n      backdrop: slots.backdrop\n    }, slots.transition && {\n      // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover\n      transition: slots.transition\n    }),\n    slotProps: {\n      root: rootSlotProps,\n      paper: paperSlotProps,\n      backdrop: typeof slotProps.backdrop === 'function' ? slotProps.backdrop(ownerState) : slotProps.backdrop,\n      transition: _objectSpread(_objectSpread({}, resolvedTransitionProps), {}, {\n        onEntering: function () {\n          var _resolvedTransitionPr;\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          handleEntering(...args);\n          resolvedTransitionProps === null || resolvedTransitionProps === void 0 || (_resolvedTransitionPr = resolvedTransitionProps.onEntering) === null || _resolvedTransitionPr === void 0 || _resolvedTransitionPr.call(resolvedTransitionProps, ...args);\n        }\n      })\n    },\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    ownerState: ownerState\n  }, other), {}, {\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(ListSlot, _objectSpread(_objectSpread({\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant\n    }, listSlotProps), {}, {\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n  /**\n   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.\n   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    list: PropTypes.elementType,\n    paper: PropTypes.elementType,\n    root: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","_excluded2","React","isFragment","PropTypes","clsx","composeClasses","HTMLElementType","useRtl","useSlotProps","MenuList","Popover","PopoverPaper","rootShouldForwardProp","styled","useDefaultProps","getMenuUtilityClass","useSlot","jsx","_jsx","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","useUtilityClasses","ownerState","classes","slots","root","paper","list","MenuRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","MenuPaper","maxHeight","WebkitOverflowScrolling","MenuMenuList","outline","Menu","forwardRef","inProps","ref","autoFocus","children","className","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","onEntering","variant","slotProps","other","isRtl","autoFocusItem","menuListActionsRef","useRef","handleEntering","element","isAppearing","current","adjustStyleForScrollbar","direction","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","externalForwardedProps","transition","rootSlotProps","elementType","externalSlotProps","PaperSlot","paperSlotProps","shouldForwardComponentProp","ListSlot","listSlotProps","getSlotProps","handlers","onKeyDown","_handlers$onKeyDown","call","resolvedTransitionProps","anchorOrigin","transformOrigin","backdrop","_resolvedTransitionPr","_len","arguments","length","args","Array","_key","actions","propTypes","anchorEl","oneOfType","func","bool","node","object","string","isRequired","shape","sx","arrayOf","oneOf","number","appear","enter","exit"],"sources":["/Users/yavuzoktay/Documents/FlyAwayBallooning/flyawayballooning-system-backend/client/node_modules/@mui/material/Menu/Menu.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport MenuList from \"../MenuList/index.js\";\nimport Popover, { PopoverPaper } from \"../Popover/index.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getMenuUtilityClass } from \"./menuClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\nconst MenuRoot = styled(Popover, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nexport const MenuPaper = styled(PopoverPaper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: (props, styles) => styles.list\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  const {\n    autoFocus = true,\n    children,\n    className,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = 'auto',\n    TransitionProps: {\n      onEntering,\n      ...TransitionProps\n    } = {},\n    variant = 'selectedMenu',\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const isRtl = useRtl();\n  const ownerState = {\n    ...props,\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, {\n        direction: isRtl ? 'rtl' : 'ltr'\n      });\n    }\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n  let activeItemIndex = -1;\n  // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      list: MenuListProps,\n      transition: TransitionProps,\n      paper: PaperProps,\n      ...slotProps\n    }\n  };\n  const rootSlotProps = useSlotProps({\n    elementType: slots.root,\n    externalSlotProps: slotProps.root,\n    ownerState,\n    className: [classes.root, className]\n  });\n  const [PaperSlot, paperSlotProps] = useSlot('paper', {\n    className: classes.paper,\n    elementType: MenuPaper,\n    externalForwardedProps,\n    shouldForwardComponentProp: true,\n    ownerState\n  });\n  const [ListSlot, listSlotProps] = useSlot('list', {\n    className: clsx(classes.list, MenuListProps.className),\n    elementType: MenuMenuList,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    getSlotProps: handlers => ({\n      ...handlers,\n      onKeyDown: event => {\n        handleListKeyDown(event);\n        handlers.onKeyDown?.(event);\n      }\n    }),\n    ownerState\n  });\n  const resolvedTransitionProps = typeof externalForwardedProps.slotProps.transition === 'function' ? externalForwardedProps.slotProps.transition(ownerState) : externalForwardedProps.slotProps.transition;\n  return /*#__PURE__*/_jsx(MenuRoot, {\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    slots: {\n      root: slots.root,\n      paper: PaperSlot,\n      backdrop: slots.backdrop,\n      ...(slots.transition && {\n        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover\n        transition: slots.transition\n      })\n    },\n    slotProps: {\n      root: rootSlotProps,\n      paper: paperSlotProps,\n      backdrop: typeof slotProps.backdrop === 'function' ? slotProps.backdrop(ownerState) : slotProps.backdrop,\n      transition: {\n        ...resolvedTransitionProps,\n        onEntering: (...args) => {\n          handleEntering(...args);\n          resolvedTransitionProps?.onEntering?.(...args);\n        }\n      }\n    },\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    ownerState: ownerState,\n    ...other,\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(ListSlot, {\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant,\n      ...listSlotProps,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n  /**\n   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.\n   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    list: PropTypes.elementType,\n    paper: PropTypes.elementType,\n    root: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}