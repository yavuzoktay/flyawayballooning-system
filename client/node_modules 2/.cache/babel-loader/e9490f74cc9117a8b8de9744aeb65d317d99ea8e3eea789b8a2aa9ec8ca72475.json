{"ast":null,"code":"import * as React from 'react';\nimport { useUtils } from \"./useUtils.js\";\nimport { getMeridiem, convertToMeridiem } from \"../utils/time-utils.js\";\nexport function useNextMonthDisabled(month, _ref) {\n  let {\n    disableFuture,\n    maxDate,\n    timezone\n  } = _ref;\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date(undefined, timezone);\n    const lastEnabledMonth = utils.startOfMonth(disableFuture && utils.isBefore(now, maxDate) ? now : maxDate);\n    return !utils.isAfter(lastEnabledMonth, month);\n  }, [disableFuture, maxDate, month, utils, timezone]);\n}\nexport function usePreviousMonthDisabled(month, _ref2) {\n  let {\n    disablePast,\n    minDate,\n    timezone\n  } = _ref2;\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date(undefined, timezone);\n    const firstEnabledMonth = utils.startOfMonth(disablePast && utils.isAfter(now, minDate) ? now : minDate);\n    return !utils.isBefore(firstEnabledMonth, month);\n  }, [disablePast, minDate, month, utils, timezone]);\n}\nexport function useMeridiemMode(date, ampm, onChange, selectionState) {\n  const utils = useUtils();\n  const meridiemMode = getMeridiem(date, utils);\n  const handleMeridiemChange = React.useCallback(mode => {\n    const timeWithMeridiem = date == null ? null : convertToMeridiem(date, mode, Boolean(ampm), utils);\n    onChange(timeWithMeridiem, selectionState !== null && selectionState !== void 0 ? selectionState : 'partial');\n  }, [ampm, date, onChange, selectionState, utils]);\n  return {\n    meridiemMode,\n    handleMeridiemChange\n  };\n}","map":{"version":3,"names":["React","useUtils","getMeridiem","convertToMeridiem","useNextMonthDisabled","month","_ref","disableFuture","maxDate","timezone","utils","useMemo","now","date","undefined","lastEnabledMonth","startOfMonth","isBefore","isAfter","usePreviousMonthDisabled","_ref2","disablePast","minDate","firstEnabledMonth","useMeridiemMode","ampm","onChange","selectionState","meridiemMode","handleMeridiemChange","useCallback","mode","timeWithMeridiem","Boolean"],"sources":["/Users/yavuzoktay/Documents/FlyAwayBallooning/flyawayballooning-system-backend/client/node_modules/@mui/x-date-pickers/internals/hooks/date-helpers-hooks.js"],"sourcesContent":["import * as React from 'react';\nimport { useUtils } from \"./useUtils.js\";\nimport { getMeridiem, convertToMeridiem } from \"../utils/time-utils.js\";\nexport function useNextMonthDisabled(month, {\n  disableFuture,\n  maxDate,\n  timezone\n}) {\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date(undefined, timezone);\n    const lastEnabledMonth = utils.startOfMonth(disableFuture && utils.isBefore(now, maxDate) ? now : maxDate);\n    return !utils.isAfter(lastEnabledMonth, month);\n  }, [disableFuture, maxDate, month, utils, timezone]);\n}\nexport function usePreviousMonthDisabled(month, {\n  disablePast,\n  minDate,\n  timezone\n}) {\n  const utils = useUtils();\n  return React.useMemo(() => {\n    const now = utils.date(undefined, timezone);\n    const firstEnabledMonth = utils.startOfMonth(disablePast && utils.isAfter(now, minDate) ? now : minDate);\n    return !utils.isBefore(firstEnabledMonth, month);\n  }, [disablePast, minDate, month, utils, timezone]);\n}\nexport function useMeridiemMode(date, ampm, onChange, selectionState) {\n  const utils = useUtils();\n  const meridiemMode = getMeridiem(date, utils);\n  const handleMeridiemChange = React.useCallback(mode => {\n    const timeWithMeridiem = date == null ? null : convertToMeridiem(date, mode, Boolean(ampm), utils);\n    onChange(timeWithMeridiem, selectionState ?? 'partial');\n  }, [ampm, date, onChange, selectionState, utils]);\n  return {\n    meridiemMode,\n    handleMeridiemChange\n  };\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,WAAW,EAAEC,iBAAiB,QAAQ,wBAAwB;AACvE,OAAO,SAASC,oBAAoBA,CAACC,KAAK,EAAAC,IAAA,EAIvC;EAAA,IAJyC;IAC1CC,aAAa;IACbC,OAAO;IACPC;EACF,CAAC,GAAAH,IAAA;EACC,MAAMI,KAAK,GAAGT,QAAQ,CAAC,CAAC;EACxB,OAAOD,KAAK,CAACW,OAAO,CAAC,MAAM;IACzB,MAAMC,GAAG,GAAGF,KAAK,CAACG,IAAI,CAACC,SAAS,EAAEL,QAAQ,CAAC;IAC3C,MAAMM,gBAAgB,GAAGL,KAAK,CAACM,YAAY,CAACT,aAAa,IAAIG,KAAK,CAACO,QAAQ,CAACL,GAAG,EAAEJ,OAAO,CAAC,GAAGI,GAAG,GAAGJ,OAAO,CAAC;IAC1G,OAAO,CAACE,KAAK,CAACQ,OAAO,CAACH,gBAAgB,EAAEV,KAAK,CAAC;EAChD,CAAC,EAAE,CAACE,aAAa,EAAEC,OAAO,EAAEH,KAAK,EAAEK,KAAK,EAAED,QAAQ,CAAC,CAAC;AACtD;AACA,OAAO,SAASU,wBAAwBA,CAACd,KAAK,EAAAe,KAAA,EAI3C;EAAA,IAJ6C;IAC9CC,WAAW;IACXC,OAAO;IACPb;EACF,CAAC,GAAAW,KAAA;EACC,MAAMV,KAAK,GAAGT,QAAQ,CAAC,CAAC;EACxB,OAAOD,KAAK,CAACW,OAAO,CAAC,MAAM;IACzB,MAAMC,GAAG,GAAGF,KAAK,CAACG,IAAI,CAACC,SAAS,EAAEL,QAAQ,CAAC;IAC3C,MAAMc,iBAAiB,GAAGb,KAAK,CAACM,YAAY,CAACK,WAAW,IAAIX,KAAK,CAACQ,OAAO,CAACN,GAAG,EAAEU,OAAO,CAAC,GAAGV,GAAG,GAAGU,OAAO,CAAC;IACxG,OAAO,CAACZ,KAAK,CAACO,QAAQ,CAACM,iBAAiB,EAAElB,KAAK,CAAC;EAClD,CAAC,EAAE,CAACgB,WAAW,EAAEC,OAAO,EAAEjB,KAAK,EAAEK,KAAK,EAAED,QAAQ,CAAC,CAAC;AACpD;AACA,OAAO,SAASe,eAAeA,CAACX,IAAI,EAAEY,IAAI,EAAEC,QAAQ,EAAEC,cAAc,EAAE;EACpE,MAAMjB,KAAK,GAAGT,QAAQ,CAAC,CAAC;EACxB,MAAM2B,YAAY,GAAG1B,WAAW,CAACW,IAAI,EAAEH,KAAK,CAAC;EAC7C,MAAMmB,oBAAoB,GAAG7B,KAAK,CAAC8B,WAAW,CAACC,IAAI,IAAI;IACrD,MAAMC,gBAAgB,GAAGnB,IAAI,IAAI,IAAI,GAAG,IAAI,GAAGV,iBAAiB,CAACU,IAAI,EAAEkB,IAAI,EAAEE,OAAO,CAACR,IAAI,CAAC,EAAEf,KAAK,CAAC;IAClGgB,QAAQ,CAACM,gBAAgB,EAAEL,cAAc,aAAdA,cAAc,cAAdA,cAAc,GAAI,SAAS,CAAC;EACzD,CAAC,EAAE,CAACF,IAAI,EAAEZ,IAAI,EAAEa,QAAQ,EAAEC,cAAc,EAAEjB,KAAK,CAAC,CAAC;EACjD,OAAO;IACLkB,YAAY;IACZC;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}